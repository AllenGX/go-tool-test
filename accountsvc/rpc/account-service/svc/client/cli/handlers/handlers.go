// Code generated by truss. DO NOT EDIT.
// Rerunning truss will overwrite this file.
// Version: 7dc4d5d85c
// Version Date: Mon May 28 22:12:59 UTC 2018

package handlers

import (
	pb "test/accountsvc/rpc/pb"
)

// RegisterLocalAccount implements Service.
func RegisterLocalAccount(CommonRegisterLocalAccount pb.CommonReq, EmailRegisterLocalAccount string, UserNameRegisterLocalAccount string, DisplayNameRegisterLocalAccount string, PasswordRegisterLocalAccount string) (*pb.RegisterLocalAccountReq, error) {
	request := pb.RegisterLocalAccountReq{
		Common:      &CommonRegisterLocalAccount,
		Email:       EmailRegisterLocalAccount,
		UserName:    UserNameRegisterLocalAccount,
		DisplayName: DisplayNameRegisterLocalAccount,
		Password:    PasswordRegisterLocalAccount,
	}
	return &request, nil
}

// RegisterLDAPAccount implements Service.
func RegisterLDAPAccount(CommonRegisterLDAPAccount pb.CommonReq, EmailRegisterLDAPAccount string) (*pb.RegisterLDAPAccountReq, error) {
	request := pb.RegisterLDAPAccountReq{
		Common: &CommonRegisterLDAPAccount,
		Email:  EmailRegisterLDAPAccount,
	}
	return &request, nil
}

// UnRegisterAccount implements Service.
func UnRegisterAccount(CommonUnRegisterAccount pb.CommonReq, AccountIdUnRegisterAccount string) (*pb.UnRegisterAccountReq, error) {
	request := pb.UnRegisterAccountReq{
		Common:    &CommonUnRegisterAccount,
		AccountId: AccountIdUnRegisterAccount,
	}
	return &request, nil
}

// GetAccountInfo implements Service.
func GetAccountInfo(CommonGetAccountInfo pb.CommonReq, AccountIdGetAccountInfo string) (*pb.GetAccountInfoReq, error) {
	request := pb.GetAccountInfoReq{
		Common:    &CommonGetAccountInfo,
		AccountId: AccountIdGetAccountInfo,
	}
	return &request, nil
}

// GetAccountCount implements Service.
func GetAccountCount(CommonGetAccountCount pb.CommonReq) (*pb.GetAccountCountReq, error) {
	request := pb.GetAccountCountReq{
		Common: &CommonGetAccountCount,
	}
	return &request, nil
}

// GetAccountList implements Service.
func GetAccountList(CommonGetAccountList pb.CommonReq, StartIndexGetAccountList int32, CountGetAccountList int32) (*pb.GetAccountListReq, error) {
	request := pb.GetAccountListReq{
		Common:     &CommonGetAccountList,
		StartIndex: StartIndexGetAccountList,
		Count:      CountGetAccountList,
	}
	return &request, nil
}

// Login implements Service.
func Login(CommonLogin pb.CommonReq, UserNameLogin string, PasswordLogin string) (*pb.LoginReq, error) {
	request := pb.LoginReq{
		Common:   &CommonLogin,
		UserName: UserNameLogin,
		Password: PasswordLogin,
	}
	return &request, nil
}

// Logout implements Service.
func Logout(CommonLogout pb.CommonReq) (*pb.LogoutReq, error) {
	request := pb.LogoutReq{
		Common: &CommonLogout,
	}
	return &request, nil
}

// GetSessionInfo implements Service.
func GetSessionInfo(CommonGetSessionInfo pb.CommonReq) (*pb.GetSessionInfoReq, error) {
	request := pb.GetSessionInfoReq{
		Common: &CommonGetSessionInfo,
	}
	return &request, nil
}

// SetSessionUserData implements Service.
func SetSessionUserData(CommonSetSessionUserData pb.CommonReq, UserDataSetSessionUserData string) (*pb.SetSessionUserDataReq, error) {
	request := pb.SetSessionUserDataReq{
		Common:   &CommonSetSessionUserData,
		UserData: UserDataSetSessionUserData,
	}
	return &request, nil
}

// GetSessionUserData implements Service.
func GetSessionUserData(CommonGetSessionUserData pb.CommonReq) (*pb.GetSessionUserDataReq, error) {
	request := pb.GetSessionUserDataReq{
		Common: &CommonGetSessionUserData,
	}
	return &request, nil
}

// RegisterApp implements Service.
func RegisterApp(CommonRegisterApp pb.CommonReq, AppNameRegisterApp string, AppRedirectIdRegisterApp string) (*pb.RegisterAppReq, error) {
	request := pb.RegisterAppReq{
		Common:        &CommonRegisterApp,
		AppName:       AppNameRegisterApp,
		AppRedirectId: AppRedirectIdRegisterApp,
	}
	return &request, nil
}

// UnRegisterApp implements Service.
func UnRegisterApp(CommonUnRegisterApp pb.CommonReq) (*pb.UnRegisterAppReq, error) {
	request := pb.UnRegisterAppReq{
		Common: &CommonUnRegisterApp,
	}
	return &request, nil
}
